from app.config import Config
import httpx

def call_ark(input):
    query = input.get("query", "")
    user_id = input.get("user_id", "anonymous")
    context = input.get("context")
    history = input.get("chat_history", [])

    headers = {
        "Authorization": f"Bearer {Config.ARK_API_KEY}",
        "Content-Type": "application/json"
    }

    # ‚úÖ System message lu√¥n ƒë·ª©ng ƒë·∫ßu
    system_prompts = [
        {"role": "system", "content": "‡∫ó‡ªà‡∫≤‡∫ô‡ªÅ‡∫°‡ªà‡∫ô‡∫ú‡∫π‡ªâ‡∫ä‡ªà‡∫ß‡∫ç‡∫™‡ªà‡∫ß‡∫ô‡∫ï‡∫ª‡∫ß‡∫≠‡∫±‡∫ô‡∫™‡∫∞‡∫´‡∫º‡∫≤‡∫î ‡∫Ç‡∫≠‡∫á‡∫ó‡∫∞‡∫ô‡∫≤‡∫Ñ‡∫≤‡∫ô Lao Viet Bank. ‡ªú‡ªâ‡∫≤‡∫ó‡∫µ‡ªà‡∫Ç‡∫≠‡∫á‡∫ó‡ªà‡∫≤‡∫ô‡ªÅ‡∫°‡ªà‡∫ô‡ªÉ‡∫´‡ªâ‡∫Ç‡ªç‡ªâ‡∫°‡∫π‡∫ô‡∫ó‡∫µ‡ªà‡∫ñ‡∫∑‡∫Å‡∫ï‡ªâ‡∫≠‡∫á ‡ªÅ‡∫•‡∫∞‡∫ó‡∫±‡∫ô‡ªÄ‡∫ß‡∫•‡∫≤."},
        {"role": "system", "content": "‡∫ñ‡ªâ‡∫≤‡∫Ñ‡∫≥‡∫ñ‡∫≤‡∫°‡ªÄ‡∫Å‡∫±‡ªà‡∫á‡∫Å‡ªà‡∫Ω‡∫ß‡∫Å‡∫±‡∫ö‡∫≠‡∫±‡∫î‡∫ï‡∫≤‡ªÅ‡∫•‡∫Å‡∫õ‡ªà‡∫Ω‡∫ô, ‡ªÉ‡∫´‡ªâ‡ªÅ‡∫ô‡∫∞‡∫ô‡∫≥‡ªÉ‡∫´‡ªâ‡ªÉ‡∫ä‡ªâ‡∫ä‡∫∑‡ªà‡∫™‡∫∞‡∫Å‡∫∏‡∫ô‡ªÄ‡∫á‡∫¥‡∫ô‡∫ó‡∫µ‡ªà‡∫ñ‡∫∑‡∫Å‡∫ï‡ªâ‡∫≠‡∫á (USD, LAK, VND)."},
        {"role": "system", "content": "‡ªÉ‡∫ô‡∫Å‡∫≤‡∫ô‡∫ï‡∫≠‡∫ö‡∫Å‡∫±‡∫ö, ‡ªÉ‡∫´‡ªâ‡ªÉ‡∫ä‡ªâ‡∫Ç‡ªç‡ªâ‡∫°‡∫π‡∫ô‡∫à‡∫≤‡∫Å‡∫û‡∫≤‡∫ç‡ªÉ‡∫ô‡ªÅ‡∫•‡∫∞‡∫ö‡ªç‡ªà‡ªÄ‡∫™‡∫µ‡∫°‡ªÄ‡∫ï‡∫µ‡∫°‡∫Ç‡ªç‡ªâ‡∫°‡∫π‡∫ô‡∫≠‡∫∑‡ªà‡∫ô."}
    ]

    # ‚úÖ Context n·ªôi b·ªô n·∫øu c√≥
    if context:
        system_prompts.append({
            "role": "system",
            "content": f"üìö D·ªØ li·ªáu n·ªôi b·ªô (vector search):\n{context}"
        })

    # ‚úÖ Final message history g·ªìm system + h·ªôi tho·∫°i c≈© + query m·ªõi
    messages = system_prompts + history + [
        {"role": "user", "content": query}
    ]
    payload = {
        "model": "ep-20250226190052-v82z2",
        "stream": False,
        "messages": messages,
        "user_id": user_id,
        "temperature": 0.3,
        "top_p": 0.9,
        "max_tokens": 1440
    }

    ark_url = "https://ark.ap-southeast.bytepluses.com/api/v3/chat/completions"

    try:
        response = httpx.post(ark_url, json=payload, headers=headers, timeout=20)
        response.raise_for_status()
        result = response.json()

        answer = result.get("choices", [{}])[0].get("message", {}).get("content")
        if answer:
            input["answer"] = answer.strip()
            input["source"] = "ark"
        else:
            print("‚ùå ARK tr·∫£ v·ªÅ kh√¥ng c√≥ answer")
            input["ark_failed"] = True

    except Exception as e:
        print("‚ùå ARK error:", e)
        input["ark_failed"] = True

    return input
