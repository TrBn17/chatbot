# from openai import OpenAI
# from app.config import Config

# client = OpenAI(api_key=Config.OPENAI_API_KEY)

# def classify_query(input):
#     query = input.get("query", "")
#     system_prompt = """
#     B·∫°n l√† m·ªôt b·ªô ph√¢n lo·∫°i truy v·∫•n ng∆∞·ªùi d√πng. Ph√¢n lo·∫°i c√¢u h·ªèi v√†o m·ªôt trong c√°c nh√≥m sau:

#     - "requirement": n·∫øu c√¢u h·ªèi li√™n quan ƒë·∫øn ƒëi·ªÅu ki·ªán, y√™u c·∫ßu, th·ªß t·ª•c ho·∫∑c h·ªì s∆° c·∫ßn thi·∫øt cho c√°c d·ªãch v·ª• c·ªßa c√¥ng ty FOXAI (v√≠ d·ª•: c·∫ßn nh·ªØng g√¨ ƒë·ªÉ apply, quy tr√¨nh tuy·ªÉn d·ª•ng, v.v.).
#     - "faq": n·∫øu c√¢u h·ªèi n·∫±m trong c√°c c√¢u h·ªèi th∆∞·ªùng g·∫∑p nh∆∞ th√¥ng tin d·ªãch v·ª•, th·ªùi gian ph·∫£n h·ªìi, ƒë·ªãa ch·ªâ li√™n h·ªá, v.v.
#     - "chitchat": n·∫øu l√† c√¢u x√£ giao, ch√†o h·ªèi, kh√¥ng mang t√≠nh nghi·ªáp v·ª•.
#     - "unknown": n·∫øu kh√¥ng x√°c ƒë·ªãnh ƒë∆∞·ª£c ho·∫∑c n·ªôi dung l·∫°.

#     Ch·ªâ tr·∫£ v·ªÅ duy nh·∫•t m·ªôt trong 4 nh√£n: requirement, faq, chitchat, unknown.
#     """

#     try:
#         res = client.chat.completions.create(
#             model="gpt-4o",
#             messages=[
#                 {"role": "system", "content": system_prompt},
#                 {"role": "user", "content": query}
#             ],
#             temperature=0
#         )
#         label = res.choices[0].message.content.strip().lower()
#         label = label.strip().lower()

#         if label not in ["requirement", "faq", "chitchat", "unknown"]:
#             print("‚ö†Ô∏è Unexpected label from GPT:", label)
#             label = "unknown"

#     except Exception as e:
#         print("‚ùå GPT error:", e)
#         label = "unknown"

#     return {**input, "type": label}



# # if __name__ == "__main__":
# #     test_inputs = [
# #         "xin ch√†o b·∫°n ∆°i",
# #         "gi·ªù l√†m vi·ªác c√¥ng ty l√† khi n√†o",
# #         "c·∫ßn chu·∫©n b·ªã nh·ªØng g√¨ ƒë·ªÉ ·ª©ng tuy·ªÉn v√†o FOXAI",
# #         "FOXAI c√≥ ƒëang tuy·ªÉn d·ª•ng kh√¥ng?",
# #         "th·ªùi ti·∫øt h√¥m nay th·∫ø n√†o?"
# #     ]

# #     for query in test_inputs:
# #         result = classify_query({"query": query})
# #         print(f"üîç Query: {query}")
# #         print(f"üìå Classified as: {result['type']}")
# #         print("----")